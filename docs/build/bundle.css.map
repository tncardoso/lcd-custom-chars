{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Canvas.svelte",
    "../../Library.svelte",
    "../../Preview.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Preview from './Preview.svelte';\n  import Library from './Library.svelte';\n\n  const ROWS = 8;\n  const COLS = 5;\n  var cells = [];\n  var code = \"\";\n  clear();\n\n  function buildCode() {\n    code = \"byte customChar[] = {\\n\";\n    for (var row = 0; row < ROWS; row++) {\n      code += \"    B\";\n      for (var col = 0; col < COLS; col++) {\n        if (cells[row][col]) {\n          code += \"1\";\n        } else {\n          code += \"0\";\n        }\n      }\n      if (row < ROWS-1) { code += \",\"; }\n      code += \"\\n\";\n    }\n    code += \"};\"\n  }\n\n  function buildCodeJson() {\n    code = \"\";\n    for (var row = 0; row < ROWS; row++) {\n      code += \"    [\";\n      for (var col = 0; col < COLS; col++) {\n        if (cells[row][col]) {\n          code += \"1\";\n        } else {\n          code += \"0\";\n        }\n        if (col != COLS-1) { code += \",\"; }\n      }\n      code += \"]\";\n      if (row < ROWS-1) { code += \",\"; }\n      code += \"\\n\";\n    }\n  }\n  \n  function cellClicked(row, col) {\n    cells[row][col] = !cells[row][col];\n    buildCode();\n  }\n\n  function clear() {\n      cells = new Array(ROWS);\n      for (var row = 0; row < ROWS; row++) {\n        cells[row] = new Array(COLS);\n      }\n      buildCode();\n  }\n\n  function load(event) {\n    cells = event.detail.cells;\n    buildCode();\n  }\n</script>\n\n<style>\n.lcd-col {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.lcd-cell {\n  width: 24px;\n  height: 24px;\n  border: 1px solid #2d663e;\n  background-color: #7ec089;\n}\n\n.lcd-cell-active {\n  background-color: rgb(0, 0, 0);\n}\n\n.code {\n}\n</style>\n\n<main>\n  <section class=\"hero is-info\">\n    <div class=\"hero-body\">\n      <div class=\"container\">\n        <h1 class=\"title\">\n          LCD Custom Characters\n        </h1>\n      </div>\n    </div>\n  </section>\n\n <section class=\"section\">\n    <div class=\"container\">\n      <h1 class=\"title\">Editor</h1>\n      <h2 class=\"subtitle\">\n        You can use this editor to create your custom characters. After making your\n        art piece, don't forget to create a Pull Request!\n      </h2>\n\n      <div class=\"columns\">\n        <div class=\"column is-one-third\">\n        {#each { length: 8 } as _, row}\n          <div class=\"lcd-col\">\n            {#each { length: 5 } as _, col}\n            <div \n              class=\"lcd-cell\"\n              class:lcd-cell-active=\"{cells[row][col]}\"\n              data-x=\"{col}\"\n              data-y=\"{row}\"\n              on:click={() => cellClicked(row, col)}\n              ></div>\n            {/each}  \n          </div>\n        {/each}\n        </div>\n         <div class=\"column code\">\n          <pre>\n            {code}\n          </pre>\n         </div>\n      </div>\n      <div class=\"columns is-centered\">\n        <div class=\"column is-one-third\">\n          <button class=\"button is-info\" on:click={clear}>Clear</button>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <Library on:message={load} />\n\n  <section class=\"section\">\n  <div class=\"container\">\n      <h1 class=\"title\">Source</h1>\n      <p><a href=\"https://github.com/tncardoso/lcd-custom-chars\" target=\"_blank\">Fork on Github</a></p>\n  </div>\n</section>\n</main>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n  import { onMount } from 'svelte';\n  import Preview from './Preview.svelte';\n\n    const dispatch = createEventDispatcher();\n    let library = [];\n\n    onMount(async () => {\n        const res = await fetch('library.json');\n        library = await res.json();\n    });\n\n    function load(name, cells) {\n      dispatch('message', {\n        name: name,\n        cells: cells\n      });\n    }\n</script>\n\n<style>\n.pointer {cursor: pointer;}\n</style>\n\n<section class=\"section\">\n  <div class=\"container\">\n      <h1 class=\"title\">Library</h1>\n      <h2 class=\"subtitle\">Click to load on editor</h2>\n\n      <div class=\"columns is-multiline\">\n      {#each library as char, i}\n      <div\n        class=\"column is-2 has-text-centered pointer\"\n        on:click={() => load(char.name, char.data) }>\n          <Preview\n            cells={char.data}/>\n          {char.name}\n      </div>\n      {/each}\n      </div>\n  </div>\n</section>",
    "<script>\n    export let cells;\n</script>\n\n<style>\n.lcd-col {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.lcd-cell {\n  width: 5px;\n  height: 5px;\n  background-color: #7ec089;\n}\n\n.lcd-cell-active {\n  background-color: black;\n}\n</style>\n\n<div>\n{#each cells as rows, row}\n    <div class=\"lcd-col\">\n        {#each rows as cell, col}\n            <div \n              class=\"lcd-cell\"\n              class:lcd-cell-active=\"{cell == 1}\"\n              data-x=\"{col}\"\n              data-y=\"{row}\"></div>\n        {/each}\n    </div>\n{/each}\n</div>"
  ],
  "names": [],
  "mappings": "AAiEA,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,AACzB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,gBAAgB,cAAC,CAAC,AAChB,gBAAgB,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAChC,CAAC;AC1DD,QAAQ,cAAC,CAAC,MAAM,CAAE,OAAO,AAAC,CAAC;ACjB3B,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,AACzB,CAAC,AAED,SAAS,eAAC,CAAC,AACT,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,gBAAgB,eAAC,CAAC,AAChB,gBAAgB,CAAE,KAAK,AACzB,CAAC"
}